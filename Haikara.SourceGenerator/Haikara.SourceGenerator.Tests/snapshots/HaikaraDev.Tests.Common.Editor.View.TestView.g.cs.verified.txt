//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Haikara.SourceGenerator.
//     Runtime FrameworkDescription: [FRAMEWORK]
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Generated: [DATE_TIME]

using Haikara.Runtime.Bindable;
using Haikara.Runtime.View;
using UnityEngine;
using Unity.Properties;
using UnityEngine.UIElements;

namespace HaikaraDev.Tests.Common.Editor.View
{
    #nullable enable
    public partial class TestView
    {
        public const string UxmlGuid = "0637ef6c9caf0b743b51be931e2ab68a";
        public override string GetGuid()
        {
            return UxmlGuid;
        }
        public override Haikara.Runtime.AssetReferenceMode AssetReferenceMode => Haikara.Runtime.AssetReferenceMode.Resource;
        
        protected override void InitializeComponentInternal()
        {
        
            TemplateProperties.Add(HaikaraDev.Tests.Common.Editor.View.TestView.SubViewProperty);

            ElementProperties.Add(HaikaraDev.Tests.Common.Editor.View.TestView.LabelTextProperty);

            ElementProperties.Add(HaikaraDev.Tests.Common.Editor.View.TestView.ToggleValueProperty);

            ElementProperties.Add(HaikaraDev.Tests.Common.Editor.View.TestView.TextFieldValueProperty);

            ElementProperties.Add(
                ManipulatorProperty<VisualElement>.Create(
                    elementNameInfo: new ElementNameInfo(
                        elementName: "test-view__button",
                        index: -1,
                        findType: Haikara.Runtime.View.ElementNameInfo.ElementFindType.First
                    ),
                    manipulator: new Clickable((evt) => { OnClick(evt); })
                )
            );

            ElementProperties.SortElementPropertiesByPriority();
        }
        
        private struct ElementNames
        {
            public const string TestViewLabel = "test-view__label";
            public const string TestViewToggle = "test-view__toggle";
            public const string TestViewTextField = "test-view__text-field";
            public const string TestViewButton = "test-view__button";
            public const string TestViewSub = "test-view-sub";
        }
        private struct TemplateInfoList
        {
            public static readonly TemplateInfo TestViewSub = new TemplateInfo(
                elementName: "test-view-sub",
                viewGuid: "4f74df35d43446d479b3145387941d86",
                templateId: "TestSubView"
            );
        }
    }
    #nullable restore
}
