name: Test Runner

on:
  pull_request:
    branches:
      - master
env:
  UNITY_VERSION: 6000.0.58f2
  UNITY_EDITOR_PATH: /opt/unity/Editor

jobs:
  dotnet-test:
    name: Source Generator Test
    runs-on: ubuntu-latest
    container:
      image: unityci/editor:ubuntu-6000.0.58f2-linux-il2cpp-3.1.0

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Verify Path Contents
        run: ls -la "${{ env.UNITY_EDITOR_PATH }}/Data/Managed" -R

      - name: Restore dependencies
        run: dotnet restore Haikara.SourceGenerator/Haikara.SourceGenerator.Tests/Haikara.SourceGenerator.Tests.csproj

      - name: Build
        run: dotnet build Haikara.SourceGenerator/Haikara.SourceGenerator.Tests/Haikara.SourceGenerator.Tests.csproj --no-restore --configuration Release

      - name: Run Test
        run: dotnet test Haikara.SourceGenerator/Haikara.SourceGenerator.Tests/Haikara.SourceGenerator.Tests.csproj --no-build --configuration Release --verbosity normal
  
  unity-test:
    name: Unity Tests (${{ matrix.testMode }})
    needs: dotnet-test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode: [ playmode, editmode ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Cache Unity Library
        uses: actions/cache@v4
        with:
          path: Haikara/Library
          key: Library-Haikara-${{ env.UNITY_VERSION }}-${{ matrix.testMode }}
          restore-keys: |
            Library-Haikara-${{ env.UNITY_VERSION }}-

      - name: Run Unity Tests
        uses: game-ci/unity-test-runner@v4
        id: unity-tests
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: Haikara
          unityVersion: ${{ env.UNITY_VERSION }}
          testMode: ${{ matrix.testMode }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.testMode }}
          path: ${{ steps.unity-tests.outputs.artifactsPath }}